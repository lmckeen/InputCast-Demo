(()=>{var t={355:t=>{self,t.exports=(()=>{"use strict";var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{CodeCast:()=>N});const n={};function o(t){const e=new Promise(((e,o)=>{n[t]={resolve:e,reject:o}}));return n[t].promise=e,n[t]}function s(){return`CodeCast_${Math.random()}`}function a(t,e=25e3){const n=[];for(;""!==t;)n.push(t.slice(0,e)),t=t.slice(e);return n}let r=!1;function i(){return r}function c(t){r=t}const d=[];async function u(t){if("string"!=typeof t)throw Error("No URL provided to send method");return p(await(await fetch(t)).text())}function p(t){if("string"!=typeof t)throw Error("No JS string provided to sendString method");const e=s();return d.push({id:e,code:t}),i()?(l(),o(e).promise):o(e).promise}function l(){if(!i())throw Error("RemotePlayer Not Connected Yet");for(;d.length>0;){const t=d.shift();C(t.id,a(t.code))}}let m;function h(t,e){const{id:o,data:s}=JSON.parse(e);!function(t,e){n[t].resolve(e)}(o,s)}function f(t,e){const{id:o,error:s}=JSON.parse(e);!function(t,e){n[t].reject(e)}(o,s)}function y(){c(!0),l()}function g(){m&&m.sendMessage("urn:x-cast:com.codecast.reload",{})}function C(t,e=[]){m&&e.forEach(((n,o)=>{const a=e.length;!function(t={id:s()}){m&&m.sendMessage("urn:x-cast:com.codecast.send",t)}({code:n,id:t,index:o,length:a})}))}class N{#shouldReload;constructor(t){const e=new cast.framework.RemotePlayer,n=new cast.framework.RemotePlayerController(e),o=cast.framework.RemotePlayerEventType,s=cast.framework.CastContext.getInstance();this.#shouldReload=t??!0,c(e.isConnected??!1),n.addEventListener(o.IS_CONNECTED_CHANGED,(t=>{const e=s.getCurrentSession();c(t.value),function(t){t&&(m=t,m.addMessageListener("urn:x-cast:com.codecast.connected",y),m.addMessageListener("urn:x-cast:com.codecast.resolve",h),m.addMessageListener("urn:x-cast:com.codecast.reject",f))}(e),"SESSION_RESUMED"===e?.getSessionState()&&this.#shouldReload&&(g(),c(!1))}))}send=u;sendString=p;reload(){c(!1),g()}}return e})()}},e={};function n(o){var s=e[o];if(void 0!==s)return s.exports;var a=e[o]={exports:{}};return t[o](a,a.exports,n),a.exports}(()=>{"use strict";var t=n(355);const e={BUTTON_DOWN:"button_down",BUTTON_RIGHT:"button_right",BUTTON_LEFT:"button_left",BUTTON_UP:"button_up",L1:"l1",R1:"r1",L2:"l2",R2:"r2",SELECT:"select",START:"start",HOME:"home",L3:"l3",R3:"r3",UP:"up",DOWN:"down",LEFT:"left",RIGHT:"right",JOYSTICKS:"joysticks",CONNECTED:"connected",DISCONNECTED:"disconnected",ALL:"all"},o={standard:{0:e.BUTTON_DOWN,1:e.BUTTON_RIGHT,2:e.BUTTON_LEFT,3:e.BUTTON_UP,4:e.L1,5:e.R1,6:e.L2,7:e.R2,8:e.SELECT,9:e.START,10:e.L3,11:e.R3,12:e.UP,13:e.DOWN,14:e.LEFT,15:e.RIGHT,16:e.HOME}},s={};function a(t,n){t===e.CONNECTED&&window.addEventListener("gamepadconnected",n),t===e.DISCONNECTED&&window.addEventListener("gamepaddisconnected",n),s[t]=s[t]??[],s[t].push(n)}function r(t,e){s[t]&&s[t].forEach((t=>t(e)))}let i;function c({delay:t=0,duration:e=500,weak:n=.5,strong:o=.5}={}){const s=Math.min(Math.max(t,0),5e3),a=Math.min(Math.max(e,1),5e3,5e3-s),r=Math.min(Math.max(o,0),1),c=Math.min(Math.max(n,0),1);i.vibrationActuator&&i.vibrationActuator.playEffect("dual-rumble",{startDelay:s,duration:a,weakMagnitude:c,strongMagnitude:r})}class d{#gamepadIndex;#buttonNames;#isConnected=!1;#lastInput={buttons:[],joysticks:[]};constructor(){window.addEventListener("gamepadconnected",(t=>{var e;this.#buttonNames=(e=t.gamepad.mapping,o[e]||console.error(`${e} is an unsupported controller`)),this.#buttonNames&&(this.#isConnected=!0,this.#gamepadIndex=t.gamepad.index,window.requestAnimationFrame(this.#loop.bind(this)))})),window.addEventListener("gamepaddisconnected",(()=>{this.#isConnected=!1}))}#loop(){if(!this.#isConnected)return;const t=function(t,e){const n=navigator.getGamepads();return i=n[e],{buttons:function(t,e){return t.buttons.map(((t,n)=>({button:{pressed:t.pressed,touched:t.touched,value:t.value},index:n,type:e[n]})))}(i,t),joysticks:{left:[i.axes[0],i.axes[1]],right:[i.axes[2],i.axes[3]]}}}(this.#buttonNames,this.#gamepadIndex),n=function(t){return{buttons:t.buttons.filter((t=>t.button.pressed||t.button.touched)),joysticks:t.joysticks}}(t);let o=!1;if(function(t,e){return t.buttons.length!==e.buttons.length||(0!==t.buttons.length||0!==e.buttons.length)&&(JSON.stringify(t.buttons)!==JSON.stringify(e.buttons)||!!t.buttons.some(((t,n)=>t.button.value!==e.buttons[n].button.value))||void 0)}(n,this.#lastInput)){const s=[];o=!0,n.buttons.forEach((t=>{r(t.type,t),s.push(t.type)})),this.#lastInput.buttons.forEach((n=>{s.includes(n.type)||(r(n.type,t.buttons[n.index]),r(e.ALL,{buttons:[t.buttons[n.index]],joysticks:t.joysticks}))}))}(function(t,e){if(JSON.stringify(t.joysticks)!==JSON.stringify(e.joysticks))return!0})(n,this.#lastInput)&&(r(e.JOYSTICKS,n.joysticks),o||r(e.ALL,n)),o&&n.buttons.length>0&&r(e.ALL,n),this.#lastInput=n,window.requestAnimationFrame(this.#loop.bind(this))}on=a;vibrate=c;static INPUT=e}class u{#isConnected=!1;#gamepadInterceptors={};#keyboardInterceptors={};#session;#gamepad;constructor(){const t=new cast.framework.RemotePlayer,e=new cast.framework.RemotePlayerController(t),n=cast.framework.CastContext.getInstance(),o=cast.framework.RemotePlayerEventType;this.#gamepad=new d,this.#setupConnectedEvents(),e.addEventListener(o.IS_CONNECTED_CHANGED,(t=>{this.#isConnected=t.value,this.#isConnected&&(this.#session=n.getCurrentSession())})),document.addEventListener("keydown",(async t=>{if(!this.#isConnected)return;const{altKey:e,ctrlKey:n,metaKey:o,shiftKey:s,key:a,code:r,repeat:i,location:c}=t;let d={altKey:e,ctrlKey:n,metaKey:o,shiftKey:s,key:a,code:r,repeat:i,location:c,preventDefault:()=>{t.preventDefault()}};d=await this.#sendInterceptor(r,d,this.#keyboardInterceptors),this.#sendKeyboardInput(d)})),this.#gamepad.on(d.INPUT.ALL,(t=>{if(!this.#isConnected)return;const e=t.buttons.map((t=>this.#sendInterceptor(t.type,t,this.#gamepadInterceptors))),n=this.#sendInterceptor(d.INPUT.JOYSTICKS,t.joysticks,this.#gamepadInterceptors);Promise.all([Promise.all(e),n]).then((([t,e])=>{this.#sendGamepadInput({buttons:t,joysticks:e})}))}))}static INPUT=d.INPUT;onBeforeGamepad(t,e){this.#gamepadInterceptors[t]=e}onBeforeKeyboard(t,e){this.#keyboardInterceptors[t]=e}#sendInterceptor(t,e,n){if(e)return n[d.INPUT.ALL]&&(e=n[d.INPUT.ALL](e)),n[t]&&(e=n[t](e)),e}#sendGamepadInput(t){this.#session.sendMessage("urn:x-cast:com.inputcast.gamepad",t)}#sendKeyboardInput(t){this.#session.sendMessage("urn:x-cast:com.inputcast.keyboard",t)}#generateGamepadToSend(t){const{id:e,connected:n,index:o,mapping:s,timestamp:a}=t;return{id:e,connected:n,index:o,mapping:s,timestamp:a}}#setupConnectedEvents(){this.#gamepad.on(d.INPUT.CONNECTED,(async t=>{const e=await this.#sendInterceptor(d.INPUT.CONNECTED,this.#generateGamepadToSend(t.gamepad),this.#gamepadInterceptors);this.#sendGamepadInput(e)})),this.#gamepad.on(d.INPUT.DISCONNECTED,(async t=>{const e=await this.#sendInterceptor(d.INPUT.DISCONNECTED,this.#generateGamepadToSend(t.gamepad),this.#gamepadInterceptors);this.#sendGamepadInput(e)}))}}window.__onGCastApiAvailable=function(e){if(e){cast.framework.CastContext.getInstance().setOptions({receiverApplicationId:"D8CC1620",autoJoinPolicy:chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED});const e=new t.CodeCast,n=new u,o=new cast.framework.RemotePlayer,s=new cast.framework.RemotePlayerController(o),a=cast.framework.RemotePlayerEventType;s.addEventListener(a.IS_CONNECTED_CHANGED,(()=>{e.send("code-to-cast.js").then((()=>{n.onBeforeKeyboard(u.INPUT.ALL,(t=>(t.preventDefault(),t)))}))}))}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,